apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

task testCoverage(type: JacocoReport, dependsOn: "test") {
    group = "Reporting"
    description = "Generate Jacoco coverage report."

    def excludedDirs = [
            '**/R.class',
            '**/R$*.class',
            '**/*$Lambda$*.*',
            '**/*Module.*',
            '**/*Dagger*.*',
            '**/*MembersInjector*.*',
            '**/*_Provide*Factory*.*',
            '**/injection**',
            '**/models**',
            '**/extensions**',
            '**/*_Factory.*',
            '**/*$*$*.*' // Anonymous classes generated by kotlin
    ]

    def javaTree = fileTree(
            dir: "${project.buildDir}/classes/java/main",
            excludes: excludedDirs)
    def kotlinTree = fileTree(
            dir: "${project.buildDir}/classes/kotlin/main",
            excludes: excludedDirs)

    def coverageSourceDirs = ["src/main/java"]

    getClassDirectories().setFrom(files([javaTree], [kotlinTree]))
    getAdditionalClassDirs().setFrom(files(coverageSourceDirs))
    getSourceDirectories().setFrom(files(coverageSourceDirs))
    getExecutionData().setFrom(fileTree(dir: "$project.buildDir", includes: ["jacoco/*.exec"]))

    reports {
        xml.enabled = true
        html.enabled = true
    }
}